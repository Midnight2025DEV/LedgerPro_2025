name: 🚀 Create Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v1.0.0-beta.1
  workflow_dispatch:  # Allow manual triggering
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0-beta.2)'
        required: true
        default: '1.0.0-beta.1'
      prerelease:
        description: 'Mark as pre-release'
        required: false
        default: true
        type: boolean

env:
  APP_NAME: LedgerPro
  BUILD_CONFIG: release

jobs:
  build-and-release:
    name: 🏗️ Build & Release
    runs-on: macos-14  # Latest macOS with Apple Silicon support
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for version info
    
    - name: 🍎 Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: 🔍 Determine Version
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/v}
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "🏷️ Release version: $VERSION"
    
    - name: 📋 Validate Project Structure
      run: |
        echo "🔍 Validating project structure..."
        if [[ ! -f "Package.swift" ]]; then
          echo "❌ Package.swift not found"
          exit 1
        fi
        if [[ ! -f "scripts/create_release.sh" ]]; then
          echo "❌ Release script not found"
          exit 1
        fi
        echo "✅ Project structure validated"
    
    - name: 🧹 Clean Build Environment
      run: |
        echo "🧹 Cleaning build environment..."
        rm -rf .build
        rm -rf releases
        swift package clean
    
    - name: 🔨 Build Release Package
      run: |
        echo "🔨 Building release package..."
        chmod +x scripts/create_release.sh
        ./scripts/create_release.sh ${{ steps.version.outputs.VERSION }}
    
    - name: 📊 Generate Build Report
      id: build_report
      run: |
        VERSION="${{ steps.version.outputs.VERSION }}"
        RELEASE_ZIP="releases/LedgerPro-$VERSION-macOS.zip"
        
        if [[ ! -f "$RELEASE_ZIP" ]]; then
          echo "❌ Release ZIP not found: $RELEASE_ZIP"
          exit 1
        fi
        
        # Calculate file info
        FILE_SIZE=$(du -h "$RELEASE_ZIP" | cut -f1)
        FILE_SHA256=$(shasum -a 256 "$RELEASE_ZIP" | cut -d' ' -f1)
        
        echo "FILE_SIZE=$FILE_SIZE" >> $GITHUB_OUTPUT
        echo "FILE_SHA256=$FILE_SHA256" >> $GITHUB_OUTPUT
        echo "RELEASE_ZIP=$RELEASE_ZIP" >> $GITHUB_OUTPUT
        
        # Generate release notes
        cat > release_notes.md << EOF
        ## 🎉 LedgerPro v$VERSION
        
        **Unsigned macOS build for testing**
        
        ### 📦 Package Information
        - **File**: LedgerPro-$VERSION-macOS.zip
        - **Size**: $FILE_SIZE
        - **SHA256**: \`$FILE_SHA256\`
        - **Platform**: macOS 14.0+ (Universal Binary)
        
        ### 🚀 Installation
        1. Download and extract the ZIP file
        2. Run \`Install_LedgerPro.command\` for automatic installation
        3. Or manually copy \`LedgerPro.app\` to Applications folder
        
        ### 🔒 Security Note
        This is an unsigned build. You'll need to:
        1. Right-click the app and select "Open"
        2. Or go to System Preferences > Security & Privacy and click "Open Anyway"
        
        ### 📊 Test Data Included
        - Sample transactions CSV (15 realistic transactions)
        - Foreign currency test data with exchange rates
        - Python script to generate large test datasets
        
        ### 🧪 What to Test
        - [ ] File upload (CSV/PDF import)
        - [ ] Transaction categorization
        - [ ] Account detection and management
        - [ ] Performance with large datasets (1000+ transactions)
        - [ ] Foreign currency handling
        - [ ] UI responsiveness and dark mode
        
        ### 🐛 Reporting Issues
        Please report bugs with:
        - Steps to reproduce
        - Expected vs actual behavior
        - macOS version and hardware details
        - Sample data that causes issues
        
        ---
        
        **Build Information**
        - Build Date: $(date)
        - Commit: ${{ github.sha }}
        - Swift Version: $(swift --version | head -n1)
        - Xcode Version: $(xcodebuild -version | head -n1)
        EOF
        
        echo "📋 Release notes generated"
    
    - name: 🏷️ Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.VERSION }}
        name: LedgerPro v${{ steps.version.outputs.VERSION }}
        body_path: release_notes.md
        files: ${{ steps.build_report.outputs.RELEASE_ZIP }}
        prerelease: ${{ github.event.inputs.prerelease || contains(steps.version.outputs.VERSION, 'beta') || contains(steps.version.outputs.VERSION, 'alpha') }}
        draft: false
        generate_release_notes: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: 📢 Release Summary
      run: |
        echo "## 🎉 Release Created Successfully!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Version**: ${{ steps.version.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
        echo "**File**: ${{ steps.build_report.outputs.RELEASE_ZIP }}" >> $GITHUB_STEP_SUMMARY
        echo "**Size**: ${{ steps.build_report.outputs.FILE_SIZE }}" >> $GITHUB_STEP_SUMMARY
        echo "**SHA256**: \`${{ steps.build_report.outputs.FILE_SHA256 }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 Release URL" >> $GITHUB_STEP_SUMMARY
        echo "[View Release](https://github.com/${{ github.repository }}/releases/tag/v${{ steps.version.outputs.VERSION }})" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📨 Share with Testers" >> $GITHUB_STEP_SUMMARY
        echo "Send testers this direct download link:" >> $GITHUB_STEP_SUMMARY
        echo "\`https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.VERSION }}/LedgerPro-${{ steps.version.outputs.VERSION }}-macOS.zip\`" >> $GITHUB_STEP_SUMMARY

  # Optional: Notify on failure
  notify-failure:
    name: 📧 Notify on Failure
    runs-on: ubuntu-latest
    needs: build-and-release
    if: failure()
    
    steps:
    - name: 📧 Failure Notification
      run: |
        echo "❌ Release build failed"
        echo "Check the logs for details: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        # Add notification logic here (Slack, email, etc.) if needed